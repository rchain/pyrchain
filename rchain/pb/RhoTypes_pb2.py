# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: RhoTypes.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from .scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eRhoTypes.proto\x1a\x15scalapb/scalapb.proto\"\xd1\x02\n\x03Par\x12\x14\n\x05sends\x18\x01 \x03(\x0b\x32\x05.Send\x12\x1a\n\x08receives\x18\x02 \x03(\x0b\x32\x08.Receive\x12\x12\n\x04news\x18\x04 \x03(\x0b\x32\x04.New\x12\x14\n\x05\x65xprs\x18\x05 \x03(\x0b\x32\x05.Expr\x12\x17\n\x07matches\x18\x06 \x03(\x0b\x32\x06.Match\x12#\n\x0cunforgeables\x18\x07 \x03(\x0b\x32\r.GUnforgeable\x12\x18\n\x07\x62undles\x18\x0b \x03(\x0b\x32\x07.Bundle\x12 \n\x0b\x63onnectives\x18\x08 \x03(\x0b\x32\x0b.Connective\x12[\n\x0blocallyFree\x18\t \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\n \x01(\x08\"a\n\x12TaggedContinuation\x12\"\n\x08par_body\x18\x01 \x01(\x0b\x32\x0e.ParWithRandomH\x00\x12\x18\n\x0escala_body_ref\x18\x02 \x01(\x03H\x00\x42\r\n\x0btagged_cont\"o\n\rParWithRandom\x12\x1a\n\x04\x62ody\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x42\n\x0brandomState\x18\x02 \x01(\x0c\x42-\xe2?*\n(coop.rchain.crypto.hash.Blake2b512Random\"\x15\n\x05PCost\x12\x0c\n\x04\x63ost\x18\x01 \x01(\x04\"k\n\x11ListParWithRandom\x12\x12\n\x04pars\x18\x01 \x03(\x0b\x32\x04.Par\x12\x42\n\x0brandomState\x18\x02 \x01(\x0c\x42-\xe2?*\n(coop.rchain.crypto.hash.Blake2b512Random\"s\n\x03Var\x12\x13\n\tbound_var\x18\x01 \x01(\x11H\x00\x12\x12\n\x08\x66ree_var\x18\x02 \x01(\x11H\x00\x12$\n\x08wildcard\x18\x03 \x01(\x0b\x32\x10.Var.WildcardMsgH\x00\x1a\r\n\x0bWildcardMsgB\x0e\n\x0cvar_instance\"I\n\x06\x42undle\x12\x1a\n\x04\x62ody\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x11\n\twriteFlag\x18\x02 \x01(\x08\x12\x10\n\x08readFlag\x18\x03 \x01(\x08\"\xc0\x01\n\x04Send\x12\x1a\n\x04\x63han\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x12\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x04.Par\x12\x12\n\npersistent\x18\x03 \x01(\x08\x12[\n\x0blocallyFree\x18\x05 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x06 \x01(\x08\"o\n\x0bReceiveBind\x12\x16\n\x08patterns\x18\x01 \x03(\x0b\x32\x04.Par\x12\x1c\n\x06source\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x17\n\tremainder\x18\x03 \x01(\x0b\x32\x04.Var\x12\x11\n\tfreeCount\x18\x04 \x01(\x05\"Q\n\x0b\x42indPattern\x12\x16\n\x08patterns\x18\x01 \x03(\x0b\x32\x04.Par\x12\x17\n\tremainder\x18\x02 \x01(\x0b\x32\x04.Var\x12\x11\n\tfreeCount\x18\x03 \x01(\x05\"2\n\x10ListBindPatterns\x12\x1e\n\x08patterns\x18\x01 \x03(\x0b\x32\x0c.BindPattern\"\xed\x01\n\x07Receive\x12\x1b\n\x05\x62inds\x18\x01 \x03(\x0b\x32\x0c.ReceiveBind\x12\x1a\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x12\n\npersistent\x18\x03 \x01(\x08\x12\x0c\n\x04peek\x18\x04 \x01(\x08\x12\x11\n\tbindCount\x18\x05 \x01(\x05\x12[\n\x0blocallyFree\x18\x06 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x07 \x01(\x08\"\xfe\x01\n\x03New\x12\x11\n\tbindCount\x18\x01 \x01(\x11\x12\x17\n\x01p\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x0b\n\x03uri\x18\x03 \x03(\t\x12(\n\ninjections\x18\x04 \x03(\x0b\x32\x14.New.InjectionsEntry\x12[\n\x0blocallyFree\x18\x05 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x1a\x37\n\x0fInjectionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x13\n\x05value\x18\x02 \x01(\x0b\x32\x04.Par:\x02\x38\x01\"[\n\tMatchCase\x12\x1d\n\x07pattern\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x1c\n\x06source\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x11\n\tfreeCount\x18\x03 \x01(\x05\"\xb6\x01\n\x05Match\x12\x1c\n\x06target\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x19\n\x05\x63\x61ses\x18\x02 \x03(\x0b\x32\n.MatchCase\x12[\n\x0blocallyFree\x18\x04 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x05 \x01(\x08\"\xd1\x07\n\x04\x45xpr\x12\x10\n\x06g_bool\x18\x01 \x01(\x08H\x00\x12\x0f\n\x05g_int\x18\x02 \x01(\x12H\x00\x12\x12\n\x08g_string\x18\x03 \x01(\tH\x00\x12\x0f\n\x05g_uri\x18\x04 \x01(\tH\x00\x12\x16\n\x0cg_byte_array\x18\x19 \x01(\x0cH\x00\x12\x1b\n\ne_not_body\x18\x05 \x01(\x0b\x32\x05.ENotH\x00\x12\x1b\n\ne_neg_body\x18\x06 \x01(\x0b\x32\x05.ENegH\x00\x12\x1d\n\x0b\x65_mult_body\x18\x07 \x01(\x0b\x32\x06.EMultH\x00\x12\x1b\n\ne_div_body\x18\x08 \x01(\x0b\x32\x05.EDivH\x00\x12\x1d\n\x0b\x65_plus_body\x18\t \x01(\x0b\x32\x06.EPlusH\x00\x12\x1f\n\x0c\x65_minus_body\x18\n \x01(\x0b\x32\x07.EMinusH\x00\x12\x19\n\te_lt_body\x18\x0b \x01(\x0b\x32\x04.ELtH\x00\x12\x1b\n\ne_lte_body\x18\x0c \x01(\x0b\x32\x05.ELteH\x00\x12\x19\n\te_gt_body\x18\r \x01(\x0b\x32\x04.EGtH\x00\x12\x1b\n\ne_gte_body\x18\x0e \x01(\x0b\x32\x05.EGteH\x00\x12\x19\n\te_eq_body\x18\x0f \x01(\x0b\x32\x04.EEqH\x00\x12\x1b\n\ne_neq_body\x18\x10 \x01(\x0b\x32\x05.ENeqH\x00\x12\x1b\n\ne_and_body\x18\x11 \x01(\x0b\x32\x05.EAndH\x00\x12\x19\n\te_or_body\x18\x12 \x01(\x0b\x32\x04.EOrH\x00\x12\x1b\n\ne_var_body\x18\x13 \x01(\x0b\x32\x05.EVarH\x00\x12\x1d\n\x0b\x65_list_body\x18\x14 \x01(\x0b\x32\x06.EListH\x00\x12\x1f\n\x0c\x65_tuple_body\x18\x15 \x01(\x0b\x32\x07.ETupleH\x00\x12;\n\ne_set_body\x18\x16 \x01(\x0b\x32\x05.ESetB\x1e\xe2?\x1b\n\x19\x63oop.rchain.models.ParSetH\x00\x12;\n\ne_map_body\x18\x17 \x01(\x0b\x32\x05.EMapB\x1e\xe2?\x1b\n\x19\x63oop.rchain.models.ParMapH\x00\x12!\n\re_method_body\x18\x18 \x01(\x0b\x32\x08.EMethodH\x00\x12#\n\x0e\x65_matches_body\x18\x1b \x01(\x0b\x32\t.EMatchesH\x00\x12\x32\n\x16\x65_percent_percent_body\x18\x1c \x01(\x0b\x32\x10.EPercentPercentH\x00\x12&\n\x10\x65_plus_plus_body\x18\x1d \x01(\x0b\x32\n.EPlusPlusH\x00\x12*\n\x12\x65_minus_minus_body\x18\x1e \x01(\x0b\x32\x0c.EMinusMinusH\x00\x12\x1b\n\ne_mod_body\x18\x1f \x01(\x0b\x32\x05.EModH\x00\x42\x0f\n\rexpr_instance\"\xa8\x01\n\x05\x45List\x12\x10\n\x02ps\x18\x01 \x03(\x0b\x32\x04.Par\x12[\n\x0blocallyFree\x18\x03 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x04 \x01(\x08\x12\x17\n\tremainder\x18\x05 \x01(\x0b\x32\x04.Var\"\x90\x01\n\x06\x45Tuple\x12\x10\n\x02ps\x18\x01 \x03(\x0b\x32\x04.Par\x12[\n\x0blocallyFree\x18\x03 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x04 \x01(\x08\"\xa7\x01\n\x04\x45Set\x12\x10\n\x02ps\x18\x01 \x03(\x0b\x32\x04.Par\x12[\n\x0blocallyFree\x18\x03 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x04 \x01(\x08\x12\x17\n\tremainder\x18\x05 \x01(\x0b\x32\x04.Var\"\xb1\x01\n\x04\x45Map\x12\x1a\n\x03kvs\x18\x01 \x03(\x0b\x32\r.KeyValuePair\x12[\n\x0blocallyFree\x18\x03 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x04 \x01(\x08\x12\x17\n\tremainder\x18\x05 \x01(\x0b\x32\x04.Var\"\xca\x01\n\x07\x45Method\x12\x12\n\nmethodName\x18\x01 \x01(\t\x12\x1c\n\x06target\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x17\n\targuments\x18\x03 \x03(\x0b\x32\x04.Par\x12[\n\x0blocallyFree\x18\x05 \x01(\x0c\x42\x46\xe2?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]\x12\x17\n\x0f\x63onnective_used\x18\x06 \x01(\x08\"F\n\x0cKeyValuePair\x12\x19\n\x03key\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"\x1f\n\x04\x45Var\x12\x17\n\x01v\x18\x01 \x01(\x0b\x32\x04.VarB\x06\xe2?\x03\xf0\x01\x01\"\x1f\n\x04\x45Not\x12\x17\n\x01p\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"\x1f\n\x04\x45Neg\x12\x17\n\x01p\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\";\n\x05\x45Mult\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\":\n\x04\x45\x44iv\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\":\n\x04\x45Mod\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\";\n\x05\x45Plus\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"<\n\x06\x45Minus\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"9\n\x03\x45Lt\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\":\n\x04\x45Lte\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"9\n\x03\x45Gt\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\":\n\x04\x45Gte\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"9\n\x03\x45\x45q\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\":\n\x04\x45Neq\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\":\n\x04\x45\x41nd\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"9\n\x03\x45Or\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"G\n\x08\x45Matches\x12\x1c\n\x06target\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x1d\n\x07pattern\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"E\n\x0f\x45PercentPercent\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"?\n\tEPlusPlus\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"A\n\x0b\x45MinusMinus\x12\x18\n\x02p1\x18\x01 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\x12\x18\n\x02p2\x18\x02 \x01(\x0b\x32\x04.ParB\x06\xe2?\x03\xf0\x01\x01\"\xa5\x02\n\nConnective\x12(\n\rconn_and_body\x18\x01 \x01(\x0b\x32\x0f.ConnectiveBodyH\x00\x12\'\n\x0c\x63onn_or_body\x18\x02 \x01(\x0b\x32\x0f.ConnectiveBodyH\x00\x12\x1d\n\rconn_not_body\x18\x03 \x01(\x0b\x32\x04.ParH\x00\x12\x1f\n\x0cvar_ref_body\x18\x04 \x01(\x0b\x32\x07.VarRefH\x00\x12\x13\n\tconn_bool\x18\x05 \x01(\x08H\x00\x12\x12\n\x08\x63onn_int\x18\x06 \x01(\x08H\x00\x12\x15\n\x0b\x63onn_string\x18\x07 \x01(\x08H\x00\x12\x12\n\x08\x63onn_uri\x18\x08 \x01(\x08H\x00\x12\x19\n\x0f\x63onn_byte_array\x18\t \x01(\x08H\x00\x42\x15\n\x13\x63onnective_instance\"&\n\x06VarRef\x12\r\n\x05index\x18\x01 \x01(\x11\x12\r\n\x05\x64\x65pth\x18\x02 \x01(\x11\"\"\n\x0e\x43onnectiveBody\x12\x10\n\x02ps\x18\x01 \x03(\x0b\x32\x04.Par\"\x17\n\x08\x44\x65ployId\x12\x0b\n\x03sig\x18\x01 \x01(\x0c\"\x1f\n\nDeployerId\x12\x11\n\tpublicKey\x18\x01 \x01(\x0c\"\xc8\x01\n\x0cGUnforgeable\x12#\n\x0eg_private_body\x18\x01 \x01(\x0b\x32\t.GPrivateH\x00\x12&\n\x10g_deploy_id_body\x18\x02 \x01(\x0b\x32\n.GDeployIdH\x00\x12*\n\x12g_deployer_id_body\x18\x03 \x01(\x0b\x32\x0c.GDeployerIdH\x00\x12/\n\x15g_sys_auth_token_body\x18\x04 \x01(\x0b\x32\x0e.GSysAuthTokenH\x00\x42\x0e\n\x0cunf_instance\"\x16\n\x08GPrivate\x12\n\n\x02id\x18\x01 \x01(\x0c\"\x18\n\tGDeployId\x12\x0b\n\x03sig\x18\x01 \x01(\x0c\" \n\x0bGDeployerId\x12\x11\n\tpublicKey\x18\x01 \x01(\x0c\"\x0f\n\rGSysAuthTokenB\xc6\x01\xe2?\xc2\x01\n\x12\x63oop.rchain.models\x1a\x36\x63oop.rchain.models.BitSetBytesMapper.bitSetBytesMapper\x1a\x38\x63oop.rchain.models.ParSetTypeMapper.parSetESetTypeMapper\x1a\x38\x63oop.rchain.models.ParMapTypeMapper.parMapEMapTypeMapperH\x00\x62\x06proto3')



_PAR = DESCRIPTOR.message_types_by_name['Par']
_TAGGEDCONTINUATION = DESCRIPTOR.message_types_by_name['TaggedContinuation']
_PARWITHRANDOM = DESCRIPTOR.message_types_by_name['ParWithRandom']
_PCOST = DESCRIPTOR.message_types_by_name['PCost']
_LISTPARWITHRANDOM = DESCRIPTOR.message_types_by_name['ListParWithRandom']
_VAR = DESCRIPTOR.message_types_by_name['Var']
_VAR_WILDCARDMSG = _VAR.nested_types_by_name['WildcardMsg']
_BUNDLE = DESCRIPTOR.message_types_by_name['Bundle']
_SEND = DESCRIPTOR.message_types_by_name['Send']
_RECEIVEBIND = DESCRIPTOR.message_types_by_name['ReceiveBind']
_BINDPATTERN = DESCRIPTOR.message_types_by_name['BindPattern']
_LISTBINDPATTERNS = DESCRIPTOR.message_types_by_name['ListBindPatterns']
_RECEIVE = DESCRIPTOR.message_types_by_name['Receive']
_NEW = DESCRIPTOR.message_types_by_name['New']
_NEW_INJECTIONSENTRY = _NEW.nested_types_by_name['InjectionsEntry']
_MATCHCASE = DESCRIPTOR.message_types_by_name['MatchCase']
_MATCH = DESCRIPTOR.message_types_by_name['Match']
_EXPR = DESCRIPTOR.message_types_by_name['Expr']
_ELIST = DESCRIPTOR.message_types_by_name['EList']
_ETUPLE = DESCRIPTOR.message_types_by_name['ETuple']
_ESET = DESCRIPTOR.message_types_by_name['ESet']
_EMAP = DESCRIPTOR.message_types_by_name['EMap']
_EMETHOD = DESCRIPTOR.message_types_by_name['EMethod']
_KEYVALUEPAIR = DESCRIPTOR.message_types_by_name['KeyValuePair']
_EVAR = DESCRIPTOR.message_types_by_name['EVar']
_ENOT = DESCRIPTOR.message_types_by_name['ENot']
_ENEG = DESCRIPTOR.message_types_by_name['ENeg']
_EMULT = DESCRIPTOR.message_types_by_name['EMult']
_EDIV = DESCRIPTOR.message_types_by_name['EDiv']
_EMOD = DESCRIPTOR.message_types_by_name['EMod']
_EPLUS = DESCRIPTOR.message_types_by_name['EPlus']
_EMINUS = DESCRIPTOR.message_types_by_name['EMinus']
_ELT = DESCRIPTOR.message_types_by_name['ELt']
_ELTE = DESCRIPTOR.message_types_by_name['ELte']
_EGT = DESCRIPTOR.message_types_by_name['EGt']
_EGTE = DESCRIPTOR.message_types_by_name['EGte']
_EEQ = DESCRIPTOR.message_types_by_name['EEq']
_ENEQ = DESCRIPTOR.message_types_by_name['ENeq']
_EAND = DESCRIPTOR.message_types_by_name['EAnd']
_EOR = DESCRIPTOR.message_types_by_name['EOr']
_EMATCHES = DESCRIPTOR.message_types_by_name['EMatches']
_EPERCENTPERCENT = DESCRIPTOR.message_types_by_name['EPercentPercent']
_EPLUSPLUS = DESCRIPTOR.message_types_by_name['EPlusPlus']
_EMINUSMINUS = DESCRIPTOR.message_types_by_name['EMinusMinus']
_CONNECTIVE = DESCRIPTOR.message_types_by_name['Connective']
_VARREF = DESCRIPTOR.message_types_by_name['VarRef']
_CONNECTIVEBODY = DESCRIPTOR.message_types_by_name['ConnectiveBody']
_DEPLOYID = DESCRIPTOR.message_types_by_name['DeployId']
_DEPLOYERID = DESCRIPTOR.message_types_by_name['DeployerId']
_GUNFORGEABLE = DESCRIPTOR.message_types_by_name['GUnforgeable']
_GPRIVATE = DESCRIPTOR.message_types_by_name['GPrivate']
_GDEPLOYID = DESCRIPTOR.message_types_by_name['GDeployId']
_GDEPLOYERID = DESCRIPTOR.message_types_by_name['GDeployerId']
_GSYSAUTHTOKEN = DESCRIPTOR.message_types_by_name['GSysAuthToken']
Par = _reflection.GeneratedProtocolMessageType('Par', (_message.Message,), {
  'DESCRIPTOR' : _PAR,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Par)
  })
_sym_db.RegisterMessage(Par)

TaggedContinuation = _reflection.GeneratedProtocolMessageType('TaggedContinuation', (_message.Message,), {
  'DESCRIPTOR' : _TAGGEDCONTINUATION,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:TaggedContinuation)
  })
_sym_db.RegisterMessage(TaggedContinuation)

ParWithRandom = _reflection.GeneratedProtocolMessageType('ParWithRandom', (_message.Message,), {
  'DESCRIPTOR' : _PARWITHRANDOM,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ParWithRandom)
  })
_sym_db.RegisterMessage(ParWithRandom)

PCost = _reflection.GeneratedProtocolMessageType('PCost', (_message.Message,), {
  'DESCRIPTOR' : _PCOST,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:PCost)
  })
_sym_db.RegisterMessage(PCost)

ListParWithRandom = _reflection.GeneratedProtocolMessageType('ListParWithRandom', (_message.Message,), {
  'DESCRIPTOR' : _LISTPARWITHRANDOM,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ListParWithRandom)
  })
_sym_db.RegisterMessage(ListParWithRandom)

Var = _reflection.GeneratedProtocolMessageType('Var', (_message.Message,), {

  'WildcardMsg' : _reflection.GeneratedProtocolMessageType('WildcardMsg', (_message.Message,), {
    'DESCRIPTOR' : _VAR_WILDCARDMSG,
    '__module__' : 'RhoTypes_pb2'
    # @@protoc_insertion_point(class_scope:Var.WildcardMsg)
    })
  ,
  'DESCRIPTOR' : _VAR,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Var)
  })
_sym_db.RegisterMessage(Var)
_sym_db.RegisterMessage(Var.WildcardMsg)

Bundle = _reflection.GeneratedProtocolMessageType('Bundle', (_message.Message,), {
  'DESCRIPTOR' : _BUNDLE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Bundle)
  })
_sym_db.RegisterMessage(Bundle)

Send = _reflection.GeneratedProtocolMessageType('Send', (_message.Message,), {
  'DESCRIPTOR' : _SEND,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Send)
  })
_sym_db.RegisterMessage(Send)

ReceiveBind = _reflection.GeneratedProtocolMessageType('ReceiveBind', (_message.Message,), {
  'DESCRIPTOR' : _RECEIVEBIND,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ReceiveBind)
  })
_sym_db.RegisterMessage(ReceiveBind)

BindPattern = _reflection.GeneratedProtocolMessageType('BindPattern', (_message.Message,), {
  'DESCRIPTOR' : _BINDPATTERN,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:BindPattern)
  })
_sym_db.RegisterMessage(BindPattern)

ListBindPatterns = _reflection.GeneratedProtocolMessageType('ListBindPatterns', (_message.Message,), {
  'DESCRIPTOR' : _LISTBINDPATTERNS,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ListBindPatterns)
  })
_sym_db.RegisterMessage(ListBindPatterns)

Receive = _reflection.GeneratedProtocolMessageType('Receive', (_message.Message,), {
  'DESCRIPTOR' : _RECEIVE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Receive)
  })
_sym_db.RegisterMessage(Receive)

New = _reflection.GeneratedProtocolMessageType('New', (_message.Message,), {

  'InjectionsEntry' : _reflection.GeneratedProtocolMessageType('InjectionsEntry', (_message.Message,), {
    'DESCRIPTOR' : _NEW_INJECTIONSENTRY,
    '__module__' : 'RhoTypes_pb2'
    # @@protoc_insertion_point(class_scope:New.InjectionsEntry)
    })
  ,
  'DESCRIPTOR' : _NEW,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:New)
  })
_sym_db.RegisterMessage(New)
_sym_db.RegisterMessage(New.InjectionsEntry)

MatchCase = _reflection.GeneratedProtocolMessageType('MatchCase', (_message.Message,), {
  'DESCRIPTOR' : _MATCHCASE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:MatchCase)
  })
_sym_db.RegisterMessage(MatchCase)

Match = _reflection.GeneratedProtocolMessageType('Match', (_message.Message,), {
  'DESCRIPTOR' : _MATCH,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Match)
  })
_sym_db.RegisterMessage(Match)

Expr = _reflection.GeneratedProtocolMessageType('Expr', (_message.Message,), {
  'DESCRIPTOR' : _EXPR,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Expr)
  })
_sym_db.RegisterMessage(Expr)

EList = _reflection.GeneratedProtocolMessageType('EList', (_message.Message,), {
  'DESCRIPTOR' : _ELIST,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EList)
  })
_sym_db.RegisterMessage(EList)

ETuple = _reflection.GeneratedProtocolMessageType('ETuple', (_message.Message,), {
  'DESCRIPTOR' : _ETUPLE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ETuple)
  })
_sym_db.RegisterMessage(ETuple)

ESet = _reflection.GeneratedProtocolMessageType('ESet', (_message.Message,), {
  'DESCRIPTOR' : _ESET,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ESet)
  })
_sym_db.RegisterMessage(ESet)

EMap = _reflection.GeneratedProtocolMessageType('EMap', (_message.Message,), {
  'DESCRIPTOR' : _EMAP,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMap)
  })
_sym_db.RegisterMessage(EMap)

EMethod = _reflection.GeneratedProtocolMessageType('EMethod', (_message.Message,), {
  'DESCRIPTOR' : _EMETHOD,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMethod)
  })
_sym_db.RegisterMessage(EMethod)

KeyValuePair = _reflection.GeneratedProtocolMessageType('KeyValuePair', (_message.Message,), {
  'DESCRIPTOR' : _KEYVALUEPAIR,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:KeyValuePair)
  })
_sym_db.RegisterMessage(KeyValuePair)

EVar = _reflection.GeneratedProtocolMessageType('EVar', (_message.Message,), {
  'DESCRIPTOR' : _EVAR,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EVar)
  })
_sym_db.RegisterMessage(EVar)

ENot = _reflection.GeneratedProtocolMessageType('ENot', (_message.Message,), {
  'DESCRIPTOR' : _ENOT,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ENot)
  })
_sym_db.RegisterMessage(ENot)

ENeg = _reflection.GeneratedProtocolMessageType('ENeg', (_message.Message,), {
  'DESCRIPTOR' : _ENEG,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ENeg)
  })
_sym_db.RegisterMessage(ENeg)

EMult = _reflection.GeneratedProtocolMessageType('EMult', (_message.Message,), {
  'DESCRIPTOR' : _EMULT,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMult)
  })
_sym_db.RegisterMessage(EMult)

EDiv = _reflection.GeneratedProtocolMessageType('EDiv', (_message.Message,), {
  'DESCRIPTOR' : _EDIV,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EDiv)
  })
_sym_db.RegisterMessage(EDiv)

EMod = _reflection.GeneratedProtocolMessageType('EMod', (_message.Message,), {
  'DESCRIPTOR' : _EMOD,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMod)
  })
_sym_db.RegisterMessage(EMod)

EPlus = _reflection.GeneratedProtocolMessageType('EPlus', (_message.Message,), {
  'DESCRIPTOR' : _EPLUS,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EPlus)
  })
_sym_db.RegisterMessage(EPlus)

EMinus = _reflection.GeneratedProtocolMessageType('EMinus', (_message.Message,), {
  'DESCRIPTOR' : _EMINUS,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMinus)
  })
_sym_db.RegisterMessage(EMinus)

ELt = _reflection.GeneratedProtocolMessageType('ELt', (_message.Message,), {
  'DESCRIPTOR' : _ELT,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ELt)
  })
_sym_db.RegisterMessage(ELt)

ELte = _reflection.GeneratedProtocolMessageType('ELte', (_message.Message,), {
  'DESCRIPTOR' : _ELTE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ELte)
  })
_sym_db.RegisterMessage(ELte)

EGt = _reflection.GeneratedProtocolMessageType('EGt', (_message.Message,), {
  'DESCRIPTOR' : _EGT,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EGt)
  })
_sym_db.RegisterMessage(EGt)

EGte = _reflection.GeneratedProtocolMessageType('EGte', (_message.Message,), {
  'DESCRIPTOR' : _EGTE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EGte)
  })
_sym_db.RegisterMessage(EGte)

EEq = _reflection.GeneratedProtocolMessageType('EEq', (_message.Message,), {
  'DESCRIPTOR' : _EEQ,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EEq)
  })
_sym_db.RegisterMessage(EEq)

ENeq = _reflection.GeneratedProtocolMessageType('ENeq', (_message.Message,), {
  'DESCRIPTOR' : _ENEQ,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ENeq)
  })
_sym_db.RegisterMessage(ENeq)

EAnd = _reflection.GeneratedProtocolMessageType('EAnd', (_message.Message,), {
  'DESCRIPTOR' : _EAND,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EAnd)
  })
_sym_db.RegisterMessage(EAnd)

EOr = _reflection.GeneratedProtocolMessageType('EOr', (_message.Message,), {
  'DESCRIPTOR' : _EOR,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EOr)
  })
_sym_db.RegisterMessage(EOr)

EMatches = _reflection.GeneratedProtocolMessageType('EMatches', (_message.Message,), {
  'DESCRIPTOR' : _EMATCHES,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMatches)
  })
_sym_db.RegisterMessage(EMatches)

EPercentPercent = _reflection.GeneratedProtocolMessageType('EPercentPercent', (_message.Message,), {
  'DESCRIPTOR' : _EPERCENTPERCENT,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EPercentPercent)
  })
_sym_db.RegisterMessage(EPercentPercent)

EPlusPlus = _reflection.GeneratedProtocolMessageType('EPlusPlus', (_message.Message,), {
  'DESCRIPTOR' : _EPLUSPLUS,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EPlusPlus)
  })
_sym_db.RegisterMessage(EPlusPlus)

EMinusMinus = _reflection.GeneratedProtocolMessageType('EMinusMinus', (_message.Message,), {
  'DESCRIPTOR' : _EMINUSMINUS,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:EMinusMinus)
  })
_sym_db.RegisterMessage(EMinusMinus)

Connective = _reflection.GeneratedProtocolMessageType('Connective', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIVE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:Connective)
  })
_sym_db.RegisterMessage(Connective)

VarRef = _reflection.GeneratedProtocolMessageType('VarRef', (_message.Message,), {
  'DESCRIPTOR' : _VARREF,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:VarRef)
  })
_sym_db.RegisterMessage(VarRef)

ConnectiveBody = _reflection.GeneratedProtocolMessageType('ConnectiveBody', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIVEBODY,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:ConnectiveBody)
  })
_sym_db.RegisterMessage(ConnectiveBody)

DeployId = _reflection.GeneratedProtocolMessageType('DeployId', (_message.Message,), {
  'DESCRIPTOR' : _DEPLOYID,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:DeployId)
  })
_sym_db.RegisterMessage(DeployId)

DeployerId = _reflection.GeneratedProtocolMessageType('DeployerId', (_message.Message,), {
  'DESCRIPTOR' : _DEPLOYERID,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:DeployerId)
  })
_sym_db.RegisterMessage(DeployerId)

GUnforgeable = _reflection.GeneratedProtocolMessageType('GUnforgeable', (_message.Message,), {
  'DESCRIPTOR' : _GUNFORGEABLE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:GUnforgeable)
  })
_sym_db.RegisterMessage(GUnforgeable)

GPrivate = _reflection.GeneratedProtocolMessageType('GPrivate', (_message.Message,), {
  'DESCRIPTOR' : _GPRIVATE,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:GPrivate)
  })
_sym_db.RegisterMessage(GPrivate)

GDeployId = _reflection.GeneratedProtocolMessageType('GDeployId', (_message.Message,), {
  'DESCRIPTOR' : _GDEPLOYID,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:GDeployId)
  })
_sym_db.RegisterMessage(GDeployId)

GDeployerId = _reflection.GeneratedProtocolMessageType('GDeployerId', (_message.Message,), {
  'DESCRIPTOR' : _GDEPLOYERID,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:GDeployerId)
  })
_sym_db.RegisterMessage(GDeployerId)

GSysAuthToken = _reflection.GeneratedProtocolMessageType('GSysAuthToken', (_message.Message,), {
  'DESCRIPTOR' : _GSYSAUTHTOKEN,
  '__module__' : 'RhoTypes_pb2'
  # @@protoc_insertion_point(class_scope:GSysAuthToken)
  })
_sym_db.RegisterMessage(GSysAuthToken)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\342?\302\001\n\022coop.rchain.models\0326coop.rchain.models.BitSetBytesMapper.bitSetBytesMapper\0328coop.rchain.models.ParSetTypeMapper.parSetESetTypeMapper\0328coop.rchain.models.ParMapTypeMapper.parMapEMapTypeMapperH\000'
  _PAR.fields_by_name['locallyFree']._options = None
  _PAR.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _PARWITHRANDOM.fields_by_name['body']._options = None
  _PARWITHRANDOM.fields_by_name['body']._serialized_options = b'\342?\003\360\001\001'
  _PARWITHRANDOM.fields_by_name['randomState']._options = None
  _PARWITHRANDOM.fields_by_name['randomState']._serialized_options = b'\342?*\n(coop.rchain.crypto.hash.Blake2b512Random'
  _LISTPARWITHRANDOM.fields_by_name['randomState']._options = None
  _LISTPARWITHRANDOM.fields_by_name['randomState']._serialized_options = b'\342?*\n(coop.rchain.crypto.hash.Blake2b512Random'
  _BUNDLE.fields_by_name['body']._options = None
  _BUNDLE.fields_by_name['body']._serialized_options = b'\342?\003\360\001\001'
  _SEND.fields_by_name['chan']._options = None
  _SEND.fields_by_name['chan']._serialized_options = b'\342?\003\360\001\001'
  _SEND.fields_by_name['locallyFree']._options = None
  _SEND.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _RECEIVEBIND.fields_by_name['source']._options = None
  _RECEIVEBIND.fields_by_name['source']._serialized_options = b'\342?\003\360\001\001'
  _RECEIVE.fields_by_name['body']._options = None
  _RECEIVE.fields_by_name['body']._serialized_options = b'\342?\003\360\001\001'
  _RECEIVE.fields_by_name['locallyFree']._options = None
  _RECEIVE.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _NEW_INJECTIONSENTRY._options = None
  _NEW_INJECTIONSENTRY._serialized_options = b'8\001'
  _NEW.fields_by_name['p']._options = None
  _NEW.fields_by_name['p']._serialized_options = b'\342?\003\360\001\001'
  _NEW.fields_by_name['locallyFree']._options = None
  _NEW.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _MATCHCASE.fields_by_name['pattern']._options = None
  _MATCHCASE.fields_by_name['pattern']._serialized_options = b'\342?\003\360\001\001'
  _MATCHCASE.fields_by_name['source']._options = None
  _MATCHCASE.fields_by_name['source']._serialized_options = b'\342?\003\360\001\001'
  _MATCH.fields_by_name['target']._options = None
  _MATCH.fields_by_name['target']._serialized_options = b'\342?\003\360\001\001'
  _MATCH.fields_by_name['locallyFree']._options = None
  _MATCH.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _EXPR.fields_by_name['e_set_body']._options = None
  _EXPR.fields_by_name['e_set_body']._serialized_options = b'\342?\033\n\031coop.rchain.models.ParSet'
  _EXPR.fields_by_name['e_map_body']._options = None
  _EXPR.fields_by_name['e_map_body']._serialized_options = b'\342?\033\n\031coop.rchain.models.ParMap'
  _ELIST.fields_by_name['locallyFree']._options = None
  _ELIST.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _ETUPLE.fields_by_name['locallyFree']._options = None
  _ETUPLE.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _ESET.fields_by_name['locallyFree']._options = None
  _ESET.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _EMAP.fields_by_name['locallyFree']._options = None
  _EMAP.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _EMETHOD.fields_by_name['target']._options = None
  _EMETHOD.fields_by_name['target']._serialized_options = b'\342?\003\360\001\001'
  _EMETHOD.fields_by_name['locallyFree']._options = None
  _EMETHOD.fields_by_name['locallyFree']._serialized_options = b'\342?C\nAcoop.rchain.models.AlwaysEqual[scala.collection.immutable.BitSet]'
  _KEYVALUEPAIR.fields_by_name['key']._options = None
  _KEYVALUEPAIR.fields_by_name['key']._serialized_options = b'\342?\003\360\001\001'
  _KEYVALUEPAIR.fields_by_name['value']._options = None
  _KEYVALUEPAIR.fields_by_name['value']._serialized_options = b'\342?\003\360\001\001'
  _EVAR.fields_by_name['v']._options = None
  _EVAR.fields_by_name['v']._serialized_options = b'\342?\003\360\001\001'
  _ENOT.fields_by_name['p']._options = None
  _ENOT.fields_by_name['p']._serialized_options = b'\342?\003\360\001\001'
  _ENEG.fields_by_name['p']._options = None
  _ENEG.fields_by_name['p']._serialized_options = b'\342?\003\360\001\001'
  _EMULT.fields_by_name['p1']._options = None
  _EMULT.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EMULT.fields_by_name['p2']._options = None
  _EMULT.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EDIV.fields_by_name['p1']._options = None
  _EDIV.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EDIV.fields_by_name['p2']._options = None
  _EDIV.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EMOD.fields_by_name['p1']._options = None
  _EMOD.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EMOD.fields_by_name['p2']._options = None
  _EMOD.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EPLUS.fields_by_name['p1']._options = None
  _EPLUS.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EPLUS.fields_by_name['p2']._options = None
  _EPLUS.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EMINUS.fields_by_name['p1']._options = None
  _EMINUS.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EMINUS.fields_by_name['p2']._options = None
  _EMINUS.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _ELT.fields_by_name['p1']._options = None
  _ELT.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _ELT.fields_by_name['p2']._options = None
  _ELT.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _ELTE.fields_by_name['p1']._options = None
  _ELTE.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _ELTE.fields_by_name['p2']._options = None
  _ELTE.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EGT.fields_by_name['p1']._options = None
  _EGT.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EGT.fields_by_name['p2']._options = None
  _EGT.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EGTE.fields_by_name['p1']._options = None
  _EGTE.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EGTE.fields_by_name['p2']._options = None
  _EGTE.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EEQ.fields_by_name['p1']._options = None
  _EEQ.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EEQ.fields_by_name['p2']._options = None
  _EEQ.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _ENEQ.fields_by_name['p1']._options = None
  _ENEQ.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _ENEQ.fields_by_name['p2']._options = None
  _ENEQ.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EAND.fields_by_name['p1']._options = None
  _EAND.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EAND.fields_by_name['p2']._options = None
  _EAND.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EOR.fields_by_name['p1']._options = None
  _EOR.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EOR.fields_by_name['p2']._options = None
  _EOR.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EMATCHES.fields_by_name['target']._options = None
  _EMATCHES.fields_by_name['target']._serialized_options = b'\342?\003\360\001\001'
  _EMATCHES.fields_by_name['pattern']._options = None
  _EMATCHES.fields_by_name['pattern']._serialized_options = b'\342?\003\360\001\001'
  _EPERCENTPERCENT.fields_by_name['p1']._options = None
  _EPERCENTPERCENT.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EPERCENTPERCENT.fields_by_name['p2']._options = None
  _EPERCENTPERCENT.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EPLUSPLUS.fields_by_name['p1']._options = None
  _EPLUSPLUS.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EPLUSPLUS.fields_by_name['p2']._options = None
  _EPLUSPLUS.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _EMINUSMINUS.fields_by_name['p1']._options = None
  _EMINUSMINUS.fields_by_name['p1']._serialized_options = b'\342?\003\360\001\001'
  _EMINUSMINUS.fields_by_name['p2']._options = None
  _EMINUSMINUS.fields_by_name['p2']._serialized_options = b'\342?\003\360\001\001'
  _PAR._serialized_start=42
  _PAR._serialized_end=379
  _TAGGEDCONTINUATION._serialized_start=381
  _TAGGEDCONTINUATION._serialized_end=478
  _PARWITHRANDOM._serialized_start=480
  _PARWITHRANDOM._serialized_end=591
  _PCOST._serialized_start=593
  _PCOST._serialized_end=614
  _LISTPARWITHRANDOM._serialized_start=616
  _LISTPARWITHRANDOM._serialized_end=723
  _VAR._serialized_start=725
  _VAR._serialized_end=840
  _VAR_WILDCARDMSG._serialized_start=811
  _VAR_WILDCARDMSG._serialized_end=824
  _BUNDLE._serialized_start=842
  _BUNDLE._serialized_end=915
  _SEND._serialized_start=918
  _SEND._serialized_end=1110
  _RECEIVEBIND._serialized_start=1112
  _RECEIVEBIND._serialized_end=1223
  _BINDPATTERN._serialized_start=1225
  _BINDPATTERN._serialized_end=1306
  _LISTBINDPATTERNS._serialized_start=1308
  _LISTBINDPATTERNS._serialized_end=1358
  _RECEIVE._serialized_start=1361
  _RECEIVE._serialized_end=1598
  _NEW._serialized_start=1601
  _NEW._serialized_end=1855
  _NEW_INJECTIONSENTRY._serialized_start=1800
  _NEW_INJECTIONSENTRY._serialized_end=1855
  _MATCHCASE._serialized_start=1857
  _MATCHCASE._serialized_end=1948
  _MATCH._serialized_start=1951
  _MATCH._serialized_end=2133
  _EXPR._serialized_start=2136
  _EXPR._serialized_end=3113
  _ELIST._serialized_start=3116
  _ELIST._serialized_end=3284
  _ETUPLE._serialized_start=3287
  _ETUPLE._serialized_end=3431
  _ESET._serialized_start=3434
  _ESET._serialized_end=3601
  _EMAP._serialized_start=3604
  _EMAP._serialized_end=3781
  _EMETHOD._serialized_start=3784
  _EMETHOD._serialized_end=3986
  _KEYVALUEPAIR._serialized_start=3988
  _KEYVALUEPAIR._serialized_end=4058
  _EVAR._serialized_start=4060
  _EVAR._serialized_end=4091
  _ENOT._serialized_start=4093
  _ENOT._serialized_end=4124
  _ENEG._serialized_start=4126
  _ENEG._serialized_end=4157
  _EMULT._serialized_start=4159
  _EMULT._serialized_end=4218
  _EDIV._serialized_start=4220
  _EDIV._serialized_end=4278
  _EMOD._serialized_start=4280
  _EMOD._serialized_end=4338
  _EPLUS._serialized_start=4340
  _EPLUS._serialized_end=4399
  _EMINUS._serialized_start=4401
  _EMINUS._serialized_end=4461
  _ELT._serialized_start=4463
  _ELT._serialized_end=4520
  _ELTE._serialized_start=4522
  _ELTE._serialized_end=4580
  _EGT._serialized_start=4582
  _EGT._serialized_end=4639
  _EGTE._serialized_start=4641
  _EGTE._serialized_end=4699
  _EEQ._serialized_start=4701
  _EEQ._serialized_end=4758
  _ENEQ._serialized_start=4760
  _ENEQ._serialized_end=4818
  _EAND._serialized_start=4820
  _EAND._serialized_end=4878
  _EOR._serialized_start=4880
  _EOR._serialized_end=4937
  _EMATCHES._serialized_start=4939
  _EMATCHES._serialized_end=5010
  _EPERCENTPERCENT._serialized_start=5012
  _EPERCENTPERCENT._serialized_end=5081
  _EPLUSPLUS._serialized_start=5083
  _EPLUSPLUS._serialized_end=5146
  _EMINUSMINUS._serialized_start=5148
  _EMINUSMINUS._serialized_end=5213
  _CONNECTIVE._serialized_start=5216
  _CONNECTIVE._serialized_end=5509
  _VARREF._serialized_start=5511
  _VARREF._serialized_end=5549
  _CONNECTIVEBODY._serialized_start=5551
  _CONNECTIVEBODY._serialized_end=5585
  _DEPLOYID._serialized_start=5587
  _DEPLOYID._serialized_end=5610
  _DEPLOYERID._serialized_start=5612
  _DEPLOYERID._serialized_end=5643
  _GUNFORGEABLE._serialized_start=5646
  _GUNFORGEABLE._serialized_end=5846
  _GPRIVATE._serialized_start=5848
  _GPRIVATE._serialized_end=5870
  _GDEPLOYID._serialized_start=5872
  _GDEPLOYID._serialized_end=5896
  _GDEPLOYERID._serialized_start=5898
  _GDEPLOYERID._serialized_end=5930
  _GSYSAUTHTOKEN._serialized_start=5932
  _GSYSAUTHTOKEN._serialized_end=5947
# @@protoc_insertion_point(module_scope)
